# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: demoPass.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='demoPass.proto',
  package='demopass',
  syntax='proto3',
  serialized_options=b'\n\031io.grpc.examples.demopassB\rDemoPassProtoP\001\242\002\002DP',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0e\x64\x65moPass.proto\x12\x08\x64\x65mopass\"\x1a\n\x07\x43ommand\x12\x0f\n\x07\x63ommand\x18\x01 \x01(\t\"!\n\x08loopInfo\x12\x15\n\rnumBasicBlock\x18\x01 \x01(\x05\x32\x42\n\x08\x64\x65moPass\x12\x36\n\x0bgetLoopInfo\x12\x11.demopass.Command\x1a\x12.demopass.loopInfo\"\x00\x42\x31\n\x19io.grpc.examples.demopassB\rDemoPassProtoP\x01\xa2\x02\x02\x44Pb\x06proto3'
)




_COMMAND = _descriptor.Descriptor(
  name='Command',
  full_name='demopass.Command',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='command', full_name='demopass.Command.command', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=54,
)


_LOOPINFO = _descriptor.Descriptor(
  name='loopInfo',
  full_name='demopass.loopInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='numBasicBlock', full_name='demopass.loopInfo.numBasicBlock', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=56,
  serialized_end=89,
)

DESCRIPTOR.message_types_by_name['Command'] = _COMMAND
DESCRIPTOR.message_types_by_name['loopInfo'] = _LOOPINFO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Command = _reflection.GeneratedProtocolMessageType('Command', (_message.Message,), {
  'DESCRIPTOR' : _COMMAND,
  '__module__' : 'demoPass_pb2'
  # @@protoc_insertion_point(class_scope:demopass.Command)
  })
_sym_db.RegisterMessage(Command)

loopInfo = _reflection.GeneratedProtocolMessageType('loopInfo', (_message.Message,), {
  'DESCRIPTOR' : _LOOPINFO,
  '__module__' : 'demoPass_pb2'
  # @@protoc_insertion_point(class_scope:demopass.loopInfo)
  })
_sym_db.RegisterMessage(loopInfo)


DESCRIPTOR._options = None

_DEMOPASS = _descriptor.ServiceDescriptor(
  name='demoPass',
  full_name='demopass.demoPass',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=91,
  serialized_end=157,
  methods=[
  _descriptor.MethodDescriptor(
    name='getLoopInfo',
    full_name='demopass.demoPass.getLoopInfo',
    index=0,
    containing_service=None,
    input_type=_COMMAND,
    output_type=_LOOPINFO,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_DEMOPASS)

DESCRIPTOR.services_by_name['demoPass'] = _DEMOPASS

# @@protoc_insertion_point(module_scope)
